// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */
import type {
    BaseTranslation as BaseTranslationType,
    LocalizedString,
    RequiredParams
} from "typesafe-i18n";

export type BaseTranslation = BaseTranslationType;
export type BaseLocale = "en";

export type Locales = "en" | "zh";

export type Translation = RootTranslation;

export type Translations = RootTranslation;

type RootTranslation = {
    commandDescriptions: {
        /**
         * C​l​e​a​r​ ​c​o​n​t​e​x​t
         */
        clearContext: string;
        /**
         * G​e​t​ ​c​u​r​r​e​n​t​ ​b​o​t
         */
        getCurrentBot: string;
        /**
         * R​e​l​o​a​d​ ​c​o​n​f​i​g
         */
        reloadConfig: string;
    };
    messages: {
        /**
         * C​o​n​t​e​x​t​ ​c​l​e​a​r​e​d
         */
        contextCleared: string;
        /**
         * B​o​t​ ​c​h​a​n​g​e​d​ ​t​o​ ​{​b​o​t​K​e​y​}
         * @param {unknown} botKey
         */
        changedBot: RequiredParams<"botKey">;
        /**
         * C​o​n​f​i​g​ ​r​e​l​o​a​d​e​d
         */
        configReloaded: string;
    };
    terms: {
        /**
         * p​r​o​v​i​d​e​r
         */
        provider: string;
        /**
         * m​o​d​e​l
         */
        model: string;
    };
};

export type TranslationFunctions = {
    commandDescriptions: {
        /**
         * Clear context
         */
        clearContext: () => LocalizedString;
        /**
         * Get current bot
         */
        getCurrentBot: () => LocalizedString;
        /**
         * Reload config
         */
        reloadConfig: () => LocalizedString;
    };
    messages: {
        /**
         * Context cleared
         */
        contextCleared: () => LocalizedString;
        /**
         * Bot changed to {botKey}
         */
        changedBot: (arg: { botKey: unknown }) => LocalizedString;
        /**
         * Config reloaded
         */
        configReloaded: () => LocalizedString;
    };
    terms: {
        /**
         * provider
         */
        provider: () => LocalizedString;
        /**
         * model
         */
        model: () => LocalizedString;
    };
};

export type Formatters = {};
